/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import entities.ArrivalFacility;
import entities.ArrivalWarehouse;
import entities.ConsumptionFacility;
import entities.ConsumptionWarehouse;
import entities.Delivery;
import entities.Facility;
import entities.Goods;
import entities.GoodsInFacility;
import entities.GoodsInPoint;
import entities.GoodsInWarehouse;
import entities.Points;
import entities.Warehouses;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import warehouse.Data;
import warehouse.WarInterface;
import warehouse.Warehouse;

/**
 *
 * @author Karelin
 */
public class MainUI extends javax.swing.JFrame {
    private static Data test;
    private static String selectedPoint = null;
    private static List<Warehouses> warlist = new ArrayList<>();
    private static List<Facility> facillist = new ArrayList<>();
    private static List<Goods> goodslist = new ArrayList<>();
    private static List<GoodsInWarehouse> giwlist = new ArrayList<>();
    private static List<GoodsInFacility> giflist = new ArrayList<>();
    private static List<Delivery> delivlist = new ArrayList<>();
    private static List<ArrivalWarehouse> arrwarlist = new ArrayList<>();
    private static List<ArrivalFacility> arrfacillist = new ArrayList<>();
    private static List<ConsumptionWarehouse> conwarlist = new ArrayList<>();
    private static List<ConsumptionFacility> confacillist = new ArrayList<>();

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        setLocationRelativeTo(null);
        if (!Warehouse.getClientStatus().equals("admin"))
        {
            jMenu2.setVisible(false);
            jMenu3.setVisible(false);
            if (Warehouse.getClientStatus().equals("warehouse"))
            {
                getCatalog();
                jTabbedPane1.remove(1);
                jComboBox1.addItem(Warehouse.getClientPoint());
                jComboBox1.setEnabled(false);
                refreshTable(jTable1, giwlist, warlist, jComboBox1);
            }
            else if (Warehouse.getClientStatus().equals("facility"))
            {
                getCatalog();
                jTabbedPane1.remove(0);
                jComboBox3.addItem(Warehouse.getClientPoint());
                jComboBox3.setEnabled(false);
                refreshTable(jTable2, giflist, facillist, jComboBox3);
            }            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Выберите склад");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Название товара", "Ед. измерения", "Колличество", "Склад"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Приход");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("На объект");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton6.setText("Обновить");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton3.setText("Доставка");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(25, 25, 25)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(92, 92, 92)
                        .addComponent(jButton6)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Склад", jPanel2);

        jLabel2.setText("Выберите объект");

        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Название товара", "Ед. измерения", "Колличество", "Объект"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton4.setText("Расход/Возврат");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton7.setText("Обновить");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton5.setText("Доставка");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(20, 20, 20)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(133, 133, 133)
                        .addComponent(jButton7)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Объект", jPanel3);

        jMenu1.setText("Файл");
        jMenu1.setActionCommand("");

        jMenuItem1.setText("Сменить пользователя");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Выход");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Редактировать");

        jMenuItem3.setText("Добавить пользователя");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Добавить склад");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Добавить объект");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Добавить товар");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Справка");

        jMenuItem7.setText("Логи операций");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        int m = JOptionPane.showConfirmDialog(null, "Вы уверены что хотите сменить пользователя?", 
                "Внимание", JOptionPane.YES_NO_OPTION);
        if (m == JOptionPane.YES_OPTION)
        {
            Warehouse.setClientPoint(null);
            Warehouse.setClientStatus(null);
            dispose();
            LoginUI login = new LoginUI();
            login.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        getCatalog();
        NewLogsUI nl = new NewLogsUI();
        nl.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setSelectedPoint(jComboBox1.getSelectedItem().toString());
        getCatalog();
        NewArrivalWarehauseUI naw = new NewArrivalWarehauseUI();
        naw.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setSelectedPoint(jComboBox1.getSelectedItem().toString());
        getCatalog();
        NewConsumptionWarehouseUI ncw = new NewConsumptionWarehouseUI();
        ncw.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setSelectedPoint(jComboBox3.getSelectedItem().toString());
        getCatalog();
        NewConsumptionFacilityUI ncf = new NewConsumptionFacilityUI();
        ncf.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        int m = JOptionPane.showConfirmDialog(null, "Вы уверены что хотите выйти?", 
                "Внимание", JOptionPane.YES_NO_OPTION);
        if (m == JOptionPane.YES_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        NewUserUI user = new NewUserUI();
        user.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        NewWarehouseUI user = new NewWarehouseUI();
        user.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        NewFacilityUI user = new NewFacilityUI();
        user.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        NewGoodsUI user = new NewGoodsUI();
        user.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if (Warehouse.getClientStatus().equals("admin"))
        {
            if (jTabbedPane1.getSelectedIndex() == 0)
            {
                refreshCatalog(jComboBox1, warlist);
                refreshTable(jTable1, giwlist, warlist, jComboBox1);
            }
            else if (jTabbedPane1.getSelectedIndex() == 1)
            {
                refreshCatalog(jComboBox3, facillist);
                refreshTable(jTable2, giflist, facillist, jComboBox3);
            }
        }
        AutoCompleteDecorator.decorate(jComboBox1);
        AutoCompleteDecorator.decorate(jComboBox3);
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        refreshTable(jTable1, giwlist, warlist, jComboBox1);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        refreshTable(jTable1, giwlist, warlist, jComboBox1);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        refreshTable(jTable2, giflist, facillist, jComboBox3);
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        refreshTable(jTable2, giflist, facillist, jComboBox3);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        setSelectedPoint(jComboBox3.getSelectedItem().toString());
        getCatalog();
        NewDeliveryToFacilityUI ndtf = new NewDeliveryToFacilityUI();
        ndtf.setVisible(true);
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setSelectedPoint(jComboBox1.getSelectedItem().toString());
        getCatalog();
        NewDeliveryToWarehouseUI ndtw = new NewDeliveryToWarehouseUI();
        ndtw.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    public static final void getCatalog()
    {
        Data data = new Data();
        data.setOperation(9); 
        Warehouse war = new Warehouse();
        if (war.connect() == WarInterface.OK) 
        {
            war.run(data);
            war.disconnect();            
        }
        test = war.getTest();
        List <Object> list = test.getValues();
        warlist.clear();
        facillist.clear();
        goodslist.clear();
        giwlist.clear();
        giflist.clear();
        delivlist.clear();
        arrwarlist.clear();
        arrfacillist.clear();
        conwarlist.clear();
        confacillist.clear();
        for (Object obj : list) 
        {
            if (obj instanceof Warehouses)
            {warlist.add((Warehouses)obj);}
            else if (obj instanceof Facility)
            {facillist.add((Facility)obj);}
            else if (obj instanceof Goods)
            {goodslist.add((Goods)obj);}
            else if (obj instanceof GoodsInWarehouse)
            {giwlist.add((GoodsInWarehouse)obj);}
            else if (obj instanceof GoodsInFacility)
            {giflist.add((GoodsInFacility)obj);}
            else if (obj instanceof Delivery)
            {delivlist.add((Delivery)obj);}
            else if (obj instanceof ArrivalWarehouse)
            {arrwarlist.add((ArrivalWarehouse)obj);}
            else if (obj instanceof ArrivalFacility)
            {arrfacillist.add((ArrivalFacility)obj);}
            else if (obj instanceof ConsumptionWarehouse)
            {conwarlist.add((ConsumptionWarehouse)obj);}
            else if (obj instanceof ConsumptionFacility)
            {confacillist.add((ConsumptionFacility)obj);}
        }
    }
    
    public final void refreshTable(JTable table, List<? extends GoodsInPoint> giplist, List<? extends Points> pointlist, JComboBox combobox)
    {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) 
        {model.removeRow(i);}
        outer:
        for (int i = 0; i < giplist.size(); i++)
        {
            GoodsInPoint gip = giplist.get(i);
            for (Points point : pointlist)
            {
                if (point.getId().equals(gip.getPointsId().getId()))
                {
                    if (combobox.getSelectedItem() == null)
                    {break outer;}
                    else if (point.getName().equals(combobox.getSelectedItem().toString()))
                    {
                        model.addRow(new Object[]{});
                        model.setValueAt(point.getName(), model.getRowCount() -1, 3);
                    }
                    else
                        continue outer;
                }
            } 
            for (Goods goods : getGoodslist())
            {
                if (goods.getId().equals(gip.getGoodsId().getId()))
                {
                    model.setValueAt(goods.getName(), model.getRowCount() -1, 0);
                    model.setValueAt(goods.getUnit(), model.getRowCount() -1, 1);
                }
            }
            model.setValueAt(gip.getAmount(), model.getRowCount() -1, 2);
        }
        if (model.getRowCount() == 0)
        {
            jButton2.setEnabled(false);
            jButton4.setEnabled(false);
        }
        else
        {
            jButton2.setEnabled(true);
            jButton4.setEnabled(true);
        }
        if (!delivlist.isEmpty())
        {
            for (Delivery deliv : delivlist)
            {
                if (deliv.getWherePoint().equals(combobox.getSelectedItem()))
                {
                    jButton3.setEnabled(true);
                    jButton5.setEnabled(true);
                    break;
                }
                else
                {
                    jButton3.setEnabled(false);
                    jButton5.setEnabled(false);
                }
            }
        }
        else
        {
            jButton3.setEnabled(false);
            jButton5.setEnabled(false);
        }
    }
    
    public final void refreshCatalog(JComboBox combobox, List<? extends Points> pointlist)
    {
        combobox.removeAllItems();
        getCatalog();
        for (Points point : pointlist) 
        {combobox.addItem(point.getName());}
        combobox.setSelectedIndex(0);
    }
    
    public static final List<Warehouses> getWarlist() {
        return warlist;
    }

    public static final List<Facility> getFacillist() {
        return facillist;
    }

    public static final List<Goods> getGoodslist() {
        return goodslist;
    }

    public static final List<GoodsInWarehouse> getGiwlist() {
        return giwlist;
    }

    public static final List<GoodsInFacility> getGiflist() {
        return giflist;
    }
    
    public static List<Delivery> getDelivlist() {
        return delivlist;
    }
    
    public static String getSelectedPoint() {
        return selectedPoint;
    }

    public static void setSelectedPoint(String clientPoint) {
        MainUI.selectedPoint = clientPoint;
    }
    
    public static List<ArrivalWarehouse> getArrwarlist() {
        return arrwarlist;
    }

    public static List<ArrivalFacility> getArrfacillist() {
        return arrfacillist;
    }

    public static List<ConsumptionWarehouse> getConwarlist() {
        return conwarlist;
    }

    public static List<ConsumptionFacility> getConfacillist() {
        return confacillist;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
