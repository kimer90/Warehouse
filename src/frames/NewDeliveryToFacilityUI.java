/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import entities.ArrivalFacility;
import entities.Delivery;
import entities.Facility;
import entities.Goods;
import entities.Warehouses;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import warehouse.Data;
import warehouse.WarInterface;
import warehouse.Warehouse;

/**
 *
 * @author Karelin
 */
public class NewDeliveryToFacilityUI extends javax.swing.JFrame {

    /**
     * Creates new form NewDeliveryToFacilityUI
     */
    public NewDeliveryToFacilityUI() {
        initComponents();
        setLocationRelativeTo(null);
        jLabel1.setText("Выбранный объект: " + MainUI.getSelectedPoint());
        refreshCatalog();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Наименование товара", "Объект", "Количество", "Откуда", "№ документа"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Принять");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Отмена");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        jLabel2.setText("Номер документа:");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(325, 325, 325)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Data data = new Data();
        data.setOperation(14);
        List<Object> list = new ArrayList<Object>();
        for (int i =0; i < jTable1.getModel().getRowCount(); i++)
        {
            try
            {
                if (((String)jTable1.getModel().getValueAt(i, 0)).equals("") ||
                        ((String)jTable1.getModel().getValueAt(i, 1)).equals("") ||
                        jTable1.getModel().getValueAt(i, 2) == null ||
                        ((String)jTable1.getModel().getValueAt(i, 3)).equals("") ||
                        ((String)jTable1.getModel().getValueAt(i, 4)).equals(""))
                {
                    JOptionPane.showMessageDialog(null, "Заполните все поля.");
                    break;
                }
                else if ((Integer)jTable1.getModel().getValueAt(i, 2) <= 0)
                {
                    JOptionPane.showMessageDialog(null, "Недопустимое колличество.");
                    break;
                }
                else
                {
                    ArrivalFacility arr = new ArrivalFacility();
                    for (Goods goods : MainUI.getGoodslist()) 
                    {
                        if (goods.getName().equals((String)jTable1.getModel().getValueAt(i, 0)))
                        {arr.setGoodsId(goods); System.err.println(goods.getId());}
                    }
                    for (Facility facil : MainUI.getFacillist()) 
                    {
                        if (facil.getName().equals((String)jTable1.getModel().getValueAt(i, 1)))
                        {arr.setActivePointId(facil); System.err.println(facil.getId());}
                    }
                    arr.setAmount((Integer)jTable1.getModel().getValueAt(i, 2));
                    arr.setTime(new Date());
                    for (Warehouses war : MainUI.getWarlist())
                    {
                        if (war.getName().equals((String)jTable1.getModel().getValueAt(i, 3)))
                        {arr.setPassivePointId(war); System.err.println(war.getId());}
                    }
                    arr.setDocumentNumber((String)jTable1.getModel().getValueAt(i, 4));
                    list.add(arr);
                    if (i == jTable1.getModel().getRowCount() - 1)
                    {
                        int m = JOptionPane.showConfirmDialog(null, "Внести изменения в БД?", 
                        "Внимание", JOptionPane.YES_NO_OPTION);
                        if (m == JOptionPane.YES_OPTION)
                        {
                            data.setValues(list);
                            Warehouse war = new Warehouse();
                            if (war.connect() == WarInterface.OK) 
                            {
                                war.run(data);
                                war.disconnect();
                            }
                            Data test = war.getTest();
                            if (test.getOperation() == 0)
                            {
                                JOptionPane.showMessageDialog(null, "Данные успешно внесены.");
                                MainUI.getCatalog();
                                refreshCatalog();
                                refreshTable();
                            }
                            else if (test.getOperation() == -1)
                            {JOptionPane.showMessageDialog(null, "Ошибка при внесении данных.");}
                        }
                    }
                }
            }
            catch (NullPointerException ex)
            {
                System.err.println("Error-> " + ex.getMessage());
                JOptionPane.showMessageDialog(null, "Заполните все поля.");
                break;
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        refreshTable();
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    public final void refreshTable()
    {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) 
        {model.removeRow(i);}        
        for (Delivery deliv : MainUI.getDelivlist())
        {
            if (deliv.getWherePoint().equals(MainUI.getSelectedPoint()) && 
                    deliv.getDocumentNumber().equals(jComboBox1.getSelectedItem()))
            {
                model.addRow(new Object[]{});
                model.setValueAt(deliv.getGoodsId().getName(), model.getRowCount() -1, 0);                
                model.setValueAt(MainUI.getSelectedPoint(), model.getRowCount() -1, 1);
                model.setValueAt(deliv.getAmount(), model.getRowCount() -1, 2);
                model.setValueAt(deliv.getFromPoint(), model.getRowCount() -1, 3);
                model.setValueAt(deliv.getDocumentNumber(), model.getRowCount() -1, 4);
            }
        }
    }
    
    public final void refreshCatalog()
    {
        jComboBox1.removeAllItems();
        Set<String> set=new LinkedHashSet<>();
        for (Delivery deliv : MainUI.getDelivlist())
        {
            if (deliv.getWherePoint().equals(MainUI.getSelectedPoint()))
            {set.add(deliv.getDocumentNumber());}
        }
        for (String str : set)
        {jComboBox1.addItem(str);}
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
